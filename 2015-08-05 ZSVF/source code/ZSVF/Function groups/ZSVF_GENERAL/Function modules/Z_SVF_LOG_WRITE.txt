FUNCTION Z_SVF_LOG_WRITE .
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(PRINT_KEY) TYPE  ZSVF001_KEY OPTIONAL
*"     VALUE(ZSVF_LOG_USER) TYPE  USRID DEFAULT SY-UNAME
*"     VALUE(ZSVF_LOG_DATE) TYPE  DATUM DEFAULT SY-DATUM
*"     VALUE(ZSVF_LOG_TIME) TYPE  UZEIT DEFAULT SY-UZEIT
*"     VALUE(MESSAGE_TYPE) TYPE  BAPI_MTYPE DEFAULT SY-MSGTY
*"     VALUE(ID) TYPE  SYMSGID DEFAULT SY-MSGID
*"     VALUE(MESSAGE_NUMBER) TYPE  SYMSGNO DEFAULT SY-MSGNO
*"     VALUE(MESSAGE) TYPE  BAPI_MSG OPTIONAL
*"     VALUE(LOG_NO) TYPE  BALOGNR OPTIONAL
*"     VALUE(LOG_MSG_NO) TYPE  BALMNR OPTIONAL
*"     VALUE(MESSAGE_V1) TYPE  SYMSGV DEFAULT SY-MSGV1
*"     VALUE(MESSAGE_V2) TYPE  SYMSGV DEFAULT SY-MSGV2
*"     VALUE(MESSAGE_V3) TYPE  SYMSGV DEFAULT SY-MSGV3
*"     VALUE(MESSAGE_V4) TYPE  SYMSGV DEFAULT SY-MSGV4
*"  EXCEPTIONS
*"      GUID_GENERATION_ERROR
*"      INSERT_LOG_TABLE_ERROR
*"----------------------------------------------------------------------
* Change Log:
* 1. 2014-09-19 Created by Arwen Liu
*----------------------------------------------------------------------*
  DATA: LV_GUID     TYPE ZSVF013-GUID,
        LW_ZSVF013  TYPE ZSVF013,
        LV_LANGUAGE TYPE BAPITGA-LANGU.

* Generate GUID
  TRY.
      CALL METHOD CL_SYSTEM_UUID=>IF_SYSTEM_UUID_STATIC~CREATE_UUID_C22
        RECEIVING
          UUID = LV_GUID.
    CATCH CX_UUID_ERROR .
      CLEAR LV_GUID.
      RAISE GUID_GENERATION_ERROR.
  ENDTRY.

* Insert log to database table
  LW_ZSVF013-GUID = LV_GUID.
  LW_ZSVF013-ZSVF_DOC_TYPE = PRINT_KEY-ZSVF_DOC_TYPE.
  LW_ZSVF013-ZSVF_DOC_NUM = PRINT_KEY-ZSVF_DOC_NUM.
  LW_ZSVF013-ZSVF_DOC_ITEM = PRINT_KEY-ZSVF_DOC_ITEM.
  LW_ZSVF013-ZSVF_DOC_ID = PRINT_KEY-ZSVF_DOC_ID.
  LW_ZSVF013-ZSVF_PRT_NO = PRINT_KEY-ZSVF_PRT_NO.
  LW_ZSVF013-ZSVF_LOG_USER = ZSVF_LOG_USER.
  LW_ZSVF013-ZSVF_LOG_DATE = ZSVF_LOG_DATE.
  LW_ZSVF013-ZSVF_LOG_TIME = ZSVF_LOG_TIME.
  LW_ZSVF013-TYPE = MESSAGE_TYPE.
  LW_ZSVF013-ID = ID.
  LW_ZSVF013-MESSAGE_NUMBER = MESSAGE_NUMBER.
*  LW_ZSVF013-MESSAGE = MESSAGE.
  LW_ZSVF013-LOG_NO = LOG_NO.
  LW_ZSVF013-LOG_MSG_NO = LOG_MSG_NO.
  LW_ZSVF013-MESSAGE_V1 = MESSAGE_V1.
  LW_ZSVF013-MESSAGE_V2 = MESSAGE_V2.
  LW_ZSVF013-MESSAGE_V3 = MESSAGE_V3.
  LW_ZSVF013-MESSAGE_V4 = MESSAGE_V4.

* Set log language
  IF GV_LOG_LANGU IS NOT INITIAL.
    LV_LANGUAGE = GV_LOG_LANGU.
  ELSE.
    LV_LANGUAGE = SY-LANGU.
  ENDIF.

* Get message in log language
  IF MESSAGE IS INITIAL AND
    ID IS NOT INITIAL AND MESSAGE_NUMBER IS NOT INITIAL.
    CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
      EXPORTING
        ID         = ID
        NUMBER     = MESSAGE_NUMBER
        LANGUAGE   = LV_LANGUAGE
        TEXTFORMAT = 'ASC'
*       LINKPATTERN        =
        MESSAGE_V1 = MESSAGE_V1
        MESSAGE_V2 = MESSAGE_V2
        MESSAGE_V3 = MESSAGE_V3
        MESSAGE_V4 = MESSAGE_V4
*       LANGUAGE_ISO       =
      IMPORTING
        MESSAGE    = MESSAGE
*       RETURN     =
*     TABLES
*       TEXT       =
      .
  ENDIF.

* Get message in Chinese
  IF MESSAGE IS INITIAL AND
    ID IS NOT INITIAL AND MESSAGE_NUMBER IS NOT INITIAL.
    LV_LANGUAGE = '1'. "Message class ZSVF language
    CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
      EXPORTING
        ID         = ID
        NUMBER     = MESSAGE_NUMBER
        LANGUAGE   = LV_LANGUAGE
        TEXTFORMAT = 'ASC'
*       LINKPATTERN        =
        MESSAGE_V1 = MESSAGE_V1
        MESSAGE_V2 = MESSAGE_V2
        MESSAGE_V3 = MESSAGE_V3
        MESSAGE_V4 = MESSAGE_V4
*       LANGUAGE_ISO       =
      IMPORTING
        MESSAGE    = MESSAGE
*       RETURN     =
*     TABLES
*       TEXT       =
      .
  ENDIF.

  LW_ZSVF013-MESSAGE = MESSAGE.

  INSERT ZSVF013 FROM LW_ZSVF013.
  IF SY-SUBRC <> 0.
    RAISE INSERT_LOG_TABLE_ERROR.
  ENDIF.

ENDFUNCTION.
