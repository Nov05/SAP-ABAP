FUNCTION Z_SVF_GET_LABLMAT.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(I_WERKS) TYPE  WERKS_D
*"     VALUE(I_DOC_TYPE) TYPE  ZSVF_DOC_TYPE
*"     VALUE(I_LABLTYPE) TYPE  ZSVF_LABLTYPE
*"     VALUE(I_LABLVER) TYPE  ZSVF_LABLVER OPTIONAL
*"     VALUE(I_VALID_FROM) TYPE  DATUM DEFAULT SY-DATUM
*"  EXPORTING
*"     VALUE(O_LABLVER) TYPE  ZSVF_LABLVER
*"     VALUE(O_LABLMAT) TYPE  ZSVF_LABLMAT
*"     VALUE(O_VADATE) TYPE  ZSVF_VADATE
*"  EXCEPTIONS
*"      NO_CONFIGURATION_FOUND
*"----------------------------------------------------------------------
  DATA: LT_ZSVF016     TYPE TABLE OF ZSVF016,
        LW_ZSVF016     TYPE ZSVF016,
        LW_ZSVF016_OLD TYPE ZSVF016.

  CLEAR: O_LABLVER, O_VADATE, O_LABLMAT.

  IF I_LABLVER IS NOT INITIAL.
    SELECT * FROM ZSVF016 INTO TABLE LT_ZSVF016
      WHERE WERKS = I_WERKS
      AND ZSVF_DOC_TYPE = I_DOC_TYPE
      AND ZSVF_LABLTYPE = I_LABLTYPE
      AND ZSVF_LABLVER = I_LABLVER
      AND ZSVF_VADATE <= I_VALID_FROM.
  ELSE.
    SELECT * FROM ZSVF016 INTO TABLE LT_ZSVF016
      WHERE WERKS = I_WERKS
      AND ZSVF_DOC_TYPE = I_DOC_TYPE
      AND ZSVF_LABLTYPE = I_LABLTYPE
      AND ZSVF_VADATE <= I_VALID_FROM.
  ENDIF.

  IF SY-SUBRC <> 0.
    RAISE NO_CONFIGURATION_FOUND.
  ENDIF.

  LOOP AT LT_ZSVF016 INTO LW_ZSVF016.
    IF LW_ZSVF016_OLD-ZSVF_VADATE IS INITIAL
      OR LW_ZSVF016_OLD-ZSVF_VADATE < LW_ZSVF016-ZSVF_VADATE    "############
      OR ( LW_ZSVF016_OLD-ZSVF_VADATE = LW_ZSVF016-ZSVF_VADATE  "############
           AND LW_ZSVF016_OLD-ZSVF_LABLVER < LW_ZSVF016-ZSVF_LABLVER ).
      O_LABLVER = LW_ZSVF016-ZSVF_LABLVER.
      O_LABLMAT = LW_ZSVF016-ZSVF_LABLMAT.
      O_VADATE = LW_ZSVF016-ZSVF_VADATE.
    ELSE.
      CLEAR LW_ZSVF016_OLD.
      LW_ZSVF016_OLD = LW_ZSVF016.
    ENDIF.
  ENDLOOP. "LOOP AT LT_ZSVF016

ENDFUNCTION.
